// <auto-generated />
using System;
using HerbstSchulung.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HerbstSchulung.EntityFramework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018081328_AddDokumentEntities")]
    partial class AddDokumentEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Dokument", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal?>("BetragNetto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Fahrzeug", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("Baujahr")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hersteller")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modell")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fahrzeuge", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Land", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Laender", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "LND-DE000001",
                            CreatedUtc = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsoCode = "DE",
                            Name = "Deutschland"
                        },
                        new
                        {
                            Id = "LND-AT000001",
                            CreatedUtc = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsoCode = "AT",
                            Name = "Österreich"
                        },
                        new
                        {
                            Id = "LND-CH000001",
                            CreatedUtc = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsoCode = "CH",
                            Name = "Schweiz"
                        });
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Art")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);

                    b.HasDiscriminator<int>("Art");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Angebot", b =>
                {
                    b.HasBaseType("HerbstSchulung.EntityFramework.DataModel.Dokument");

                    b.Property<DateTime?>("GueltigBisUtc")
                        .HasColumnType("datetime2");

                    b.Property<double?>("RabattProzent")
                        .HasColumnType("float");

                    b.ToTable("Angebote", (string)null);
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Rechnung", b =>
                {
                    b.HasBaseType("HerbstSchulung.EntityFramework.DataModel.Dokument");

                    b.Property<string>("Rechnungsnummer")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ZahlungszielTage")
                        .HasColumnType("int");

                    b.ToTable("Rechnungen", (string)null);
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Auto", b =>
                {
                    b.HasBaseType("HerbstSchulung.EntityFramework.DataModel.Fahrzeug");

                    b.Property<int>("AnzahlTueren")
                        .HasColumnType("int");

                    b.Property<bool>("HatHybridantrieb")
                        .HasColumnType("bit");

                    b.ToTable("Autos", (string)null);
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Lastkraftwagen", b =>
                {
                    b.HasBaseType("HerbstSchulung.EntityFramework.DataModel.Fahrzeug");

                    b.Property<int>("Achsen")
                        .HasColumnType("int");

                    b.Property<double>("ZuladungInTonnen")
                        .HasColumnType("float");

                    b.ToTable("Lastkraftwagen", (string)null);
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Student", b =>
                {
                    b.HasBaseType("HerbstSchulung.EntityFramework.DataModel.Person");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Teacher", b =>
                {
                    b.HasBaseType("HerbstSchulung.EntityFramework.DataModel.Person");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Auto", b =>
                {
                    b.HasOne("HerbstSchulung.EntityFramework.DataModel.Fahrzeug", null)
                        .WithOne()
                        .HasForeignKey("HerbstSchulung.EntityFramework.DataModel.Auto", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HerbstSchulung.EntityFramework.DataModel.Lastkraftwagen", b =>
                {
                    b.HasOne("HerbstSchulung.EntityFramework.DataModel.Fahrzeug", null)
                        .WithOne()
                        .HasForeignKey("HerbstSchulung.EntityFramework.DataModel.Lastkraftwagen", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
