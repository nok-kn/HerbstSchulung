<Project>
	<PropertyGroup>
		<!--
		TargetFramework gibt an, für welche .NET-Version das Projekt gebaut wird.
		Beispiel: net8.0 steht für .NET 8.
		Dadurch wird festgelegt, welche APIs und Funktionen im Projekt verfügbar sind.
		-->
		<!-- Empfehlung: LTS Versionen bevorzugen .net8, .net10 ... 
	         netstandard nur für Bibliotheken die auf älteren .NET Versionen laufen müssen -->
		<TargetFramework>net8.0</TargetFramework>

		<!-- LangVersion legt die C#-Sprachversion fest -->
		<!-- Empfehlung: weg lassen (automatische Zuordnung zur TargetFramework Version. Jede .NET-Version hat eine Standard-C#-Version: z.B. C#12 für .NET 8)
		                oder latest  -->
		<LangVersion>latest</LangVersion>

		<!-- Aktiviert Nullable Reference Types für bessere Null-Sicherheit -->
		<!-- Empfehlung: immer enable für neue Projekte -->
		<Nullable>enable</Nullable>

		<!-- Behandelt alle Warnungen als Fehler -->
		<!-- Empfehlung:  1. immer true für neue Projekte 
		             oder 2. immer true in CI Build
                     oder 3. .editorconfig Datei benutzen 
					   -->
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>
		
		<!-- Konkrete Warnungen auschliessen:
		     NU1900 Error occurred while getting package vulnerability data: Unable to load the service index for source https://api.nuget.org/v3/index.json.
		 -->
		<WarningsNotAsErrors>NU1900</WarningsNotAsErrors>

		<!-- oder um nur bestimmte Warnungen als Fehler zu behandeln:
		<WarningsAsErrors>nullable</WarningsAsErrors>
		-->

		<!-- ImplicitUsings
		Vorteile:
			- Weniger Schreibaufwand, da viele Standard-Namespaces automatisch verfügbar sind.
			- Der Code wirkt aufgeräumter und kürzer.
			- Besonders nützlich für kleine Projekte oder Einsteiger.
		Nachteile:
			- Weniger Kontrolle darüber, welche Namespaces eingebunden werden.
			- Kann zu Namenskonflikten führen, wenn mehrere Namespaces gleiche Typnamen enthalten.
			- Für große oder komplexe Projekte kann es die Übersichtlichkeit beeinträchtigen.
		-->
		<!-- Empfehlung: mit Vorsicht geniessen, nur für standard Standard-Namespaces benutzen  -->
		<ImplicitUsings>enable</ImplicitUsings>

    </PropertyGroup>
</Project>
